/*
 * Backtest.cpp
 *
 *  Created on: 11 Nov 2016
 *      Author: shamitha
 */

#include "Backtest.h"

Backtest::Backtest(PriceManager& priceManager, PortfolioHandler portfolioHandler,
		double initEquity, std::queue<TradingEvent>& eventsQueue):
		eventsQueue(eventsQueue), priceManager(priceManager) {
	// TODO Auto-generated constructor stub

}

void Backtest::ExecuteBackTest(){

	int temp = 100;

	//TODO change terminate condition
	while(!temp <= 0){

		//If the Events queue is empty then stream price data
		if(eventsQueue.empty()){
			priceManager.StreamNextEvent();
		}else{
			TradingEvent event = eventsQueue.front();

			switch(event.GetEventType()){
				case EventType::BarEvent :
					break;
				case EventType::OrderEvent :
					break;
				case EventType::SignalEvent :
					break;
				case EventType::Event :
					break;
			}

			eventsQueue.pop();
			temp--;
		}
	}

}

Backtest::~Backtest() {
	// TODO Auto-generated destructor stub
}

